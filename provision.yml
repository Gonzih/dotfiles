- name: Provision my configuration
  hosts: localhost
  connection: local
  become: yes
  become_user: gnzh
  environment:
    GOPATH: /home/gnzh/go-projects

  vars:
    dotfiles:
      - { url: 'git@github.com:Gonzih/.vim.git',                dest: '~/.vim'                      }
      - { url: 'git@github.com:Gonzih/.mc.git',                 dest: '~/.config/mc'                }
      - { url: 'git@github.com:Gonzih/.fish.git',               dest: '~/.config/fish'              }
      - { url: 'git@github.com:Gonzih/.xmonad.git',             dest: '~/.xmonad'                   }
      - { url: 'git@github.com:Gonzih/.mutt.git',               dest: '~/.mutt'                     }

    gotools:
      - 'github.com/stamblerre/gocode'
      - 'golang.org/x/tools/cmd/goimports'
      - 'golang.org/x/tools/cmd/godoc'
      - 'golang.org/x/lint/golint'
      - 'github.com/kisielk/errcheck'
      - 'github.com/ddollar/forego'
      - 'github.com/zmb3/gogetdoc'
      - 'github.com/Gonzih/simpleton'
      - 'github.com/Gonzih/screensaver-off-go'
      - 'github.com/Gonzih/external-screen-xps-helper'
      # - 'github.com/Gonzih/gocalendar-agenda-cli-tool'

  tasks:

    - name: Pull updates to the gpg key
      command: gpg --keyserver hkps://keys.gnupg.net --recv-keys 7DE9280D5ED997D8
      register: task_result
      until: task_result.rc == 0
      retries: 10
      delay: 1
      ignore_errors: yes

    - name: Stash changes in dotfiles
      shell: test -f {{ item.dest }} && cd {{ item.dest }} && git stash
      args:
        executable: /bin/sh
      with_items: "{{ dotfiles }}"

    - name: Install dotfiles
      git: accept_hostkey=true repo={{ item.url }} dest={{ item.dest }}
      with_items: "{{ dotfiles }}"

    - name: Pop changes in dotfiles
      shell: cd {{ item.dest }} && git stash pop
      ignore_errors: yes
      failed_when: no
      changed_when: yes
      with_items: "{{ dotfiles }}"

    - name: Check if dein.vim exists
      stat:
        path: ~/.vim/bundle/dein.vim
      register: dein_stat

    - name: Get dein script
      get_url: url=https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh dest=/tmp/dein.sh
      when: dein_stat.stat.exists == False

    - name: Install dein
      command: sh /tmp/dein.sh ~/.vim/bundle/dein.vim
      when: dein_stat.stat.exists == False

    - name: Get go packages
      command: go get -u {{ item }}
      with_items: "{{ gotools }}"

    - name: Symlink nvim
      file: src=/usr/bin/nvim dest=~/bin/vim state=link

    - name: Symlink .vim
      file: src=~/.vim dest=~/.config/nvim state=link

    - name: Symlink .vimrc
      file: src=~/.vim/vimrc dest={{ item }} state=link
      with_items:
        - ~/.vimrc
        - ~/.config/nvim/init.vim
        - ~/.gvimrc

    - name: Symlink .ideavim
      file: src=~/.vim/ideavimrc dest=~/.ideavimrc state=link

    - name: Run post update tasks
      shell: "{{ item }}"
      environment:
        DISPLAY: ':0'
      with_items:
        - xmonad --recompile && xmonad --restart
        - xrdb -merge {{ ansible_env.HOME }}/.Xresources
        - vim -Es -c 'source ~/.vimrc' -c 'call dein#update()' -c 'qall' || echo done

# vim:ft=yaml.ansible:
