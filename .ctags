--langmap=Lisp:+.clj
--langdef=coffee
--langmap=coffee:.coffee

--regex-coffee=/(^|=[ \t])*class ([A-Za-z]+\.)*([A-Za-z]+)( extends [A-Za-z_.]+)?$/\3/c,class/
--regex-coffee=/^[ \t]*(module\.)?(exports\.)?@?([A-Za-z_.]+):.*[-=]>.*$/\3/m,method/
--regex-coffee=/^[ \t]*(module\.)?(exports\.)?([A-Za-z_.]+)[ \t]+=.*[-=]>.*$/\3/f,function/
--regex-coffee=/^[ \t]*([A-Za-z_.]+)[ \t]+=[^->\n]*$/\1/v,variable/
--regex-coffee=/^[ \t]*@([A-Za-z_.]+)[ \t]+=[^->\n]*$/\1/f,field/
--regex-coffee=/^[ \t]*@([A-Za-z_.]+):[^->\n]*$/\1/f,static field/
--regex-coffee=/^[ \t]*([A-Za-z_.]+):[^->\n]*$/\1/f,field/
--regex-coffee=/(constructor: \()@([A-Za-z_.]+)/\2/f,field/
--regex-coffee=/(constructor: \()@[A-Za-z_.]+(, @([A-Za-z_.]+)){0}/\3/f,field/
--regex-coffee=/(constructor: \()@[A-Za-z_.]+(, @([A-Za-z_.]+)){1}/\3/f,field/
--regex-coffee=/(constructor: \()@[A-Za-z_.]+(, @([A-Za-z_.]+)){2}/\3/f,field/
--regex-coffee=/(constructor: \()@[A-Za-z_.]+(, @([A-Za-z_.]+)){3}/\3/f,field/
--regex-coffee=/(constructor: \()@[A-Za-z_.]+(, @([A-Za-z_.]+)){4}/\3/f,field/
--regex-coffee=/(constructor: \()@[A-Za-z_.]+(, @([A-Za-z_.]+)){5}/\3/f,field/
--regex-coffee=/(constructor: \()@[A-Za-z_.]+(, @([A-Za-z_.]+)){6}/\3/f,field/
--regex-coffee=/(constructor: \()@[A-Za-z_.]+(, @([A-Za-z_.]+)){7}/\3/f,field/
--regex-coffee=/(constructor: \()@[A-Za-z_.]+(, @([A-Za-z_.]+)){8}/\3/f,field/
--regex-coffee=/(constructor: \()@[A-Za-z_.]+(, @([A-Za-z_.]+)){9}/\3/f,field/
